#include <stdint.h>


#define BASE_ADRESS_GPIOA 0x40020000
#define BASE_ADRESS_GPIOB  0x40020400
#define BASE_ADRESS_RCC 0x40023800

typedef struct{
	volatile int MODER;
	volatile int OTYPER;
	volatile int  OSPEEDR;
	volatile int PUPDR;
	volatile int IDR;
	volatile int ODR;
	volatile int BSRR;
	volatile int LCKR;
	volatile int AFRL;
	volatile int AFRH;
}GPIO_TypeDef;

#define GPIOA ((GPIO_TypeDef *) BASE_ADRESS_GPIOA)
#define GPIOB ((GPIO_TypeDef *) BASE_ADRESS_GPIOB)

typedef struct{
	volatile int CR;
	volatile int PLLCFGR;
	volatile int CFGR;
	volatile int CIR;
	volatile int AHB1RSTR;
	volatile int AHB2RSTR;
	volatile int Reserved1[2];
	volatile int APB1RSTR;
	volatile int APB2RSTR;
	volatile int Reserved2[2];
	volatile int AHB1ENR;
	volatile int AHB2ENR;
}RCC_typeDef;
#define RCC ((RCC_typeDef *) BASE_ADRESS_RCC)


int main(void)
{
 int correct[4]={1,2,3,4};
 int usersq[4]={0};
 int ind=0;

 RCC->AHB1ENR |= (1<<0);
 RCC->AHB1ENR |= (1<<1);

 GPIOA->MODER &=~ ((0b11<<(0*2))|(0b11<<(1*2))|(0b11<<(2*2))|(0b11<<(3*2)));
 GPIOA->PUPDR |= ((0b01<<(0*2))|(0b01<<(1*2))|(0b01<<(2*2))|(0b01<<(3*2)));

 GPIOB->MODER |= ((0b01<<0)|(0b01<<(1*2))|(0b01<<(2*2)));

 while(1){
	if(ind <4){
		 if(!((GPIOA->IDR>>0)&1)){
			 usersq[ind]=1;
			 ind++;
			 while(!((GPIOA->IDR>>0)&1));
			 }
		 else if(!((GPIOA->IDR>>1)&1)){
			 usersq[ind]=2;
			 ind++;
			 while(!((GPIOA->IDR>>1)&1));
			 }
		 else if(!((GPIOA->IDR>>2)&1)){
			 usersq[ind]=3;
			 ind++;
			 while(!((GPIOA->IDR>>2)&1));
			 }
		 else if(!((GPIOA->IDR>>3)&1)){
			 usersq[ind]=4;
			 ind++;
			 while(!((GPIOA->IDR>>3)&1));
			 }
		 if(ind==4){
			 int ismach=1;
			 for(int i=0;i<4;i++){
				 if(usersq[i]!=correct[i]){
					 ismach=0;
					 break;
				 }
			 }
			 if(ismach){
				 GPIOB->ODR |= (1<<0);
				 GPIOB->ODR &=~ ((1<<1)|(1<<2));
			 }
			 else{
				 GPIOB->ODR &=~ (1<<0);
				GPIOB->ODR |= ((1<<1)|(1<<2));
			 }
			 ind=0;
	}
		 if(!((GPIOA->IDR>>4)&1)){
			 GPIOB->ODR &=~ (1<<0);
			GPIOB->ODR &=~ ((1<<1)|(1<<2));
			ind=0;
		 }
	}
 }
}
