#include <stdint.h>
#define BASE_ADRRES_GPIOA 0x4002000
#define BASE_ADRRES_GPIOB 0x40020800
#define BASE_ADRESS_RCC 0x40023000

typedef struct{
	volatile int MODER;
	volatile int OTYPER;
	volatile int OSPEEDR;
	volatile int PUPDR;
	volatile int IDR;
	volatile int ODR;
	volatile int BSRR;
	volatile int LCKR;
	volatile int AFRL;
}GPIO_define;

#define GPIOA ((GPIO_define *) BASE_ADRRES_GPIOA)
#define GPIOB ((GPIO_define *) BASE_ADRRES_GPIOB)

typedef struct
{
	volatile int CR;
	volatile int PLLCFGR;
	volatile int CFGR;
	volatile int CIR;
	volatile int AHB1RSTR;
	volatile int AHB2RSTR;
	volatile int RESERVED0[2];
	volatile int APB1RSTR;
	volatile int APB2RSTR;
	volatile int RESERVED1[2];
	volatile int AHB1ENR;
	volatile int AHB2ENR;
	volatile int RESERVED2[2];
	volatile int APB1ENR;
	volatile int APB2ENR;
}RCC_RegDef_t;

#define RCC ((RCC_RegDef_t *) BASE_ADRESS_RCC)
int main(void)
{
      RCC->AHB1ENR |= (1<<0);
      RCC->AHB1ENR |= (1<<1);

      GPIOA ->MODER &= ~((0b00<<0)|(0b00<<(1*2))|(0b00<<(2*2))|(0b00<<(3*2)));
      GPIOA ->PUPDR |= ((0b01<<0)|(0b01<<(1*2))|(0b01<<(2*2))|(0b01<<(3*2)));

      GPIOB->MODER |= (0b01<<0);
      GPIOB->MODER |= (0b01<<(1*2));
      GPIOB->MODER |= (0b01<<(2*2));

      int correct[4]={1,3,2,4};
      int seruance[4] = {0};
      int ind = 0;

      while(1)
      {
    	  if(ind<4)
    	  {
    		  if(!((GPIOA->IDR>>0)&1)){
    			  seruance[ind]=1;
    			  ind++;
    			  while(!((GPIOA->IDR>>0)&1));
    		  }
    		  else if(!((GPIOA->IDR>>1)&1)){
    			  seruance[ind]=2;
    			  ind++;
    			  while(!((GPIOA->IDR>>1)&1));
    		  }
    		  else if(!((GPIOA->IDR>>2)&1)){
    			  seruance[ind]=3;
    		       ind++;
    		       while(!((GPIOA->IDR>>2)&1));
    		  }
    		  else if(!((GPIOA->IDR>>3)&1)){
    			  seruance[ind]=4;
    		        ind++;
    		       while(!((GPIOA->IDR>>3)&1));
    		   }
    	  }
    	  if(ind==4){
    		  int ismach=1;
    		  for(int i=0;i<4;i++){
    			  if(correct[i]!=seruance[i]){
    				  ismach=0;
    				  break;
    			  }
    		  }
    		  if(ismach){
    			  GPIOB->ODR|=(1<<1);
    			  GPIOB->ODR &=~(1<<0)|(1<<2);
    		  }
    		  else{
    			  GPIOB->ODR&=~(1<<1);
    			  GPIOB->ODR |= (1<<0)|(1<<2);
    		  }

    		  ind=0;
    	  }
    	  if(!((GPIOA->IDR >> 5)&1)){
    		  GPIOB->ODR &=~(1<<0)|(1<<2)|(1<<1);
    		  ind=0;
    	  }
      }
}
